# Stage 1: Base build stage
FROM python:3.13-slim AS builder

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    gettext \
    git \
    libffi-dev \
    libjpeg-dev \
    libmemcached-dev \
    libpq-dev \
    libssl-dev \
    libxml2-dev \
    libxslt1-dev \
    locales \
    nginx \
    python3-virtualenv \
    python3-dev \
    sudo \
    supervisor \
    libmaxminddb0 \
    libmaxminddb-dev \
    zlib1g-dev \
    nodejs  \
    npm && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    dpkg-reconfigure locales &&  \
    locale-gen C.UTF-8 &&  \
    /usr/sbin/update-locale LANG=C.UTF-8

ENV LC_ALL=C.UTF-8

# Create the app directory
RUN mkdir /app

# Set the working directory
WORKDIR /app

# Set environment variables to optimize Python
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1 

# Upgrade pip and install dependencies
RUN pip install --upgrade pip 

# Copy the requirements file first (better caching)
COPY requirements.txt /app/

# Install Python dependencies
RUN --mount=type=secret,id=GITHUB_TOKEN_SIA \
    GITHUB_TOKEN=$(cat /run/secrets/GITHUB_TOKEN_SIA) \
    pip install --no-cache-dir --upgrade-strategy eager -Ur /app/requirements.txt

# Stage 2: Production stage
FROM python:3.13-slim

RUN apt-get update && apt-get install -y git python3-dev gcc libffi-dev gettext npm

RUN useradd -m -r appuser && \
    mkdir /app && \
    chown -R appuser /app

# Copy the Python dependencies from the builder stage
COPY --from=builder /usr/local/lib/python3.13/site-packages/ /usr/local/lib/python3.13/site-packages/
COPY --from=builder /usr/local/bin/ /usr/local/bin/

# Set the working directory
WORKDIR /app

# Copy application code
COPY --chown=appuser:appuser ./deployment/docker/pretix.worker.bash .

# Set environment variables to optimize Python
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1 

RUN npm install -g n && n latest && npm install -g npm && hash -r && chmod +x ./pretix.worker.bash

RUN python -m pretix compilemessages

VOLUME ["/app/data", "/app/public"]

EXPOSE 8000

ENTRYPOINT ["./pretix.worker.bash"]